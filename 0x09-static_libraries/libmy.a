!<arch>
0-isupper.c/    0           0     0     644     22        `
int _isupper(int c);
0-strcat.c/     0           0     0     644     39        `
char *_strcat(char *dest, char *src);

1-isdigit.c/    0           0     0     644     22        `
int _isdigit(int c);
1-strncat.c/    0           0     0     644     47        `
char *_strncat(char *dest, char *src, int n);

2-strlen.c/     0           0     0     644     23        `
int _strlen(char *s);

3-islower.c/    0           0     0     644     22        `
int _islower(int c);
3-strcmp.c/     0           0     0     644     34        `
int _strcmp(char *s1, char *s2);
4-isalpha.c/    0           0     0     644     22        `
int _isalpha(int c);
5-strstr.c/     0           0     0     644     46        `
char *_strstr(char *haystack, char *needle);
9-strcpy.c/     0           0     0     644     39        `
char *_strcpy(char *dest, char *src);

_putchar.c/     0           0     0     644     259       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
return (write(1, &c, 1));
}

0-memset.c/     0           0     0     644     49        `
char *_memset(char *s, char b, unsigned int n);

100-atoi.c/     0           0     0     644     21        `
int _atoi(char *s);

1-memcpy.c/     0           0     0     644     55        `
char *_memcpy(char *dest, char *src, unsigned int n);

2-strchr.c/     0           0     0     644     33        `
char *_strchr(char *s, char c);

2-strncpy.c/    0           0     0     644     47        `
char *_strncpy(char *dest, char *src, int n);

3-puts.c/       0           0     0     644     22        `
void _puts(char *s);
3-strspn.c/     0           0     0     644     46        `
unsigned int _strspn(char *s, char *accept);
4-strpbrk.c/    0           0     0     644     40        `
char *_strpbrk(char *s, char *accept);
6-abs.c/        0           0     0     644     18        `
int _abs(int n);
